# test_complete_system.py
"""
–ü–æ–ª–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–∏—Å—Ç–µ–º—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π
"""

import sys
import os
import time
import pandas as pd
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from tbank_api.tbank_data_loader import TBankDataLoader

def test_complete_system():
    print("üß™ –ü–û–õ–ù–û–ï –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –°–ò–°–¢–ï–ú–´")
    print("=" * 50)
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è
    loader = TBankDataLoader()
    print("‚úÖ TBankDataLoader –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω")
    
    # –¢–µ—Å—Ç 1: –ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    print("\n1. üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –±–∞–∑–æ–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    try:
        stats = loader.get_performance_stats()
        print(f"   ‚Ä¢ –ó–∞–ø—Ä–æ—Å–æ–≤: {stats['total_requests']}")
        print(f"   ‚Ä¢ Hit Ratio: {stats['cache_hit_ratio']}")
        print("   ‚úÖ –ë–∞–∑–æ–≤–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –±–∞–∑–æ–≤–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")
    
    # –¢–µ—Å—Ç 2: –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    print("\n2. üìà –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    try:
        analytics = loader.get_detailed_analytics()
        print(f"   ‚Ä¢ –¢—Ä–µ–Ω–¥ Hit Ratio: {analytics.get('hit_ratio_trend', 'N/A')}")
        print(f"   ‚Ä¢ –ê–∫—Ç–∏–≤–Ω—ã—Ö –∞–ª–µ—Ä—Ç–æ–≤: {analytics.get('active_alerts_count', 0)}")
        print(f"   ‚Ä¢ –í—Ä–µ–º—è —Ä–∞–±–æ—Ç—ã: {analytics.get('uptime_hours', 0):.1f} —á")
        print("   ‚úÖ –†–∞—Å—à–∏—Ä–µ–Ω–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    print("\n3. üéØ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    try:
        full_analytics = loader.get_advanced_analytics()
        alerts = full_analytics.get('active_alerts', [])
        print(f"   ‚Ä¢ –í—Å–µ–≥–æ –∞–ª–µ—Ä—Ç–æ–≤: {len(alerts)}")
        for alert in alerts:
            print(f"   ‚Ä¢ –ê–ª–µ—Ä—Ç: {alert['title']} ({alert['level']})")
        print("   ‚úÖ –ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")
    
    # –¢–µ—Å—Ç 4: –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –µ—Å—Ç—å API –∫–ª—é—á)
    print("\n4. üîç –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
    try:
        symbols = loader.get_available_symbols()
        if not symbols.empty:
            print(f"   ‚Ä¢ –ó–∞–≥—Ä—É–∂–µ–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {len(symbols)}")
            print("   ‚úÖ –ó–∞–≥—Ä—É–∑–∫–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ —Ä–∞–±–æ—Ç–∞–µ—Ç")
        else:
            print("   ‚ö†Ô∏è –ù–µ—Ç –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤ (–≤–æ–∑–º–æ–∂–Ω–æ, –Ω–µ—Ç API –∫–ª—é—á–∞)")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {e}")
    
    # –¢–µ—Å—Ç 5: –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞
    print("\n5. üíæ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∞...")
    try:
        cache_stats = loader.get_cache_stats()
        print(f"   ‚Ä¢ –§–∞–π–ª–æ–≤ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {cache_stats.get('instruments_cache_size', 0)}")
        print(f"   ‚Ä¢ –§–∞–π–ª–æ–≤ —Å–≤–µ—á–µ–π: {cache_stats.get('candles_cache_size', 0)}")
        print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä –∫—ç—à–∞: {cache_stats.get('total_cache_size_mb', 0):.2f} MB")
        print("   ‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∫—ç—à–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –∫—ç—à–∞: {e}")
    
    print("\n" + "=" * 50)
    print("üéâ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï –ó–ê–í–ï–†–®–ï–ù–û!")
    print("üí° –°–∏—Å—Ç–µ–º–∞ –≥–æ—Ç–æ–≤–∞ –∫ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—é —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–æ–π")

if __name__ == "__main__":
    test_complete_system()