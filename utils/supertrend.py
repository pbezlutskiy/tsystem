# ===== –°–ï–ö–¶–ò–Ø 19: –ò–ù–î–ò–ö–ê–¢–û–† SUPER TREND =====
"""
–†–µ–∞–ª–∏–∑–∞—Ü–∏—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞ Super Trend –¥–ª—è –æ–ø—Ä–µ–¥–µ–ª–µ–Ω–∏—è —Ç—Ä–µ–Ω–¥–∞
–ó–µ–ª–µ–Ω–∞—è –ª–∏–Ω–∏—è –ø–æ–¥ —Ü–µ–Ω–æ–π - –≤–æ—Å—Ö–æ–¥—è—â–∏–π —Ç—Ä–µ–Ω–¥, –∫—Ä–∞—Å–Ω–∞—è –Ω–∞–¥ —Ü–µ–Ω–æ–π - –Ω–∏—Å—Ö–æ–¥—è—â–∏–π
"""

import pandas as pd
import numpy as np
from typing import Tuple

def calculate_supertrend(data: pd.DataFrame, atr_period: int = 10, multiplier: float = 3.0) -> pd.DataFrame:
    """
    –û–ü–¢–ò–ú–ò–ó–ò–†–û–í–ê–ù–ù–ê–Ø –≤–µ—Ä—Å–∏—è —Ä–∞—Å—á–µ—Ç–∞ Super Trend —Å –≤–µ–∫—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã–º–∏ –æ–ø–µ—Ä–∞—Ü–∏—è–º–∏
    """
    df = data.copy().reset_index(drop=True)
    
    print(f"üîß Super Trend —Ä–∞—Å—á–µ—Ç: {len(df)} –∑–∞–ø–∏—Å–µ–π")
    print(f"   –ö–æ–ª–æ–Ω–∫–∏: {list(df.columns)}")
    
    # üîç –ü–†–û–í–ï–†–ö–ê –í–•–û–î–ù–´–• –î–ê–ù–ù–´–•
    if 'high' not in df.columns or 'low' not in df.columns or 'close' not in df.columns:
        print(f"‚ùå –û–®–ò–ë–ö–ê: –û—Ç—Å—É—Ç—Å—Ç–≤—É—é—Ç –Ω–µ–æ–±—Ö–æ–¥–∏–º—ã–µ –∫–æ–ª–æ–Ω–∫–∏ high, low, close")
        # –°–æ–∑–¥–∞–µ–º –ø—É—Å—Ç—ã–µ –∫–æ–ª–æ–Ω–∫–∏ —á—Ç–æ–±—ã –∏–∑–±–µ–∂–∞—Ç—å –æ—à–∏–±–æ–∫
        df['supertrend_direction'] = 1.0
        df['supertrend_line'] = df['close'] if 'close' in df.columns else 0.0
        return df
    
    print(f"‚úÖ –î–∞–Ω–Ω—ã–µ –ø—Ä–æ–≤–µ—Ä–µ–Ω—ã: high={df['high'].min():.2f}-{df['high'].max():.2f}, "
          f"low={df['low'].min():.2f}-{df['low'].max():.2f}, "
          f"close={df['close'].min():.2f}-{df['close'].max():.2f}")
    
    # –†–∞—Å—á–µ—Ç HL2 –∏ ATR
    df['hl2'] = (df['high'] + df['low']) / 2
    df['tr'] = calculate_true_range(df)
    df['atr'] = df['tr'].rolling(window=atr_period, min_periods=1).mean()
    
    print(f"üìä ATR —Ä–∞—Å—á–µ—Ç: min={df['atr'].min():.2f}, max={df['atr'].max():.2f}, "
          f"NaN={df['atr'].isna().sum()}")
    
    # –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª–æ—Å—ã
    df['basic_upper'] = df['hl2'] + (multiplier * df['atr'])
    df['basic_lower'] = df['hl2'] - (multiplier * df['atr'])
    
    print(f"üìà –ë–∞–∑–æ–≤—ã–µ –ø–æ–ª–æ—Å—ã: upper={df['basic_upper'].min():.2f}-{df['basic_upper'].max():.2f}, "
          f"lower={df['basic_lower'].min():.2f}-{df['basic_lower'].max():.2f}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –º–∞—Å—Å–∏–≤–æ–≤ –¥–ª—è –≤–µ–∫—Ç–æ—Ä–∏–∑–æ–≤–∞–Ω–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤
    final_upper = np.zeros(len(df))
    final_lower = np.zeros(len(df))
    supertrend_direction = np.zeros(len(df))
    supertrend_line = np.zeros(len(df))
    
    # –ù–∞—Ö–æ–¥–∏–º –ø–µ—Ä–≤—ã–π –≤–∞–ª–∏–¥–Ω—ã–π –∏–Ω–¥–µ–∫—Å –ø–æ—Å–ª–µ —Ä–∞—Å—á–µ—Ç–∞ ATR
    first_valid_idx = df['atr'].first_valid_index()
    if first_valid_idx is None:
        print(f"‚ùå –û–®–ò–ë–ö–ê: ATR –Ω–µ —Ä–∞—Å—Å—á–∏—Ç–∞–Ω, –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è NaN")
        df['supertrend_direction'] = 1.0
        df['supertrend_line'] = df['close']
        return df
    
    start_idx = df.index.get_loc(first_valid_idx)
    print(f"‚úÖ –ü–µ—Ä–≤—ã–π –≤–∞–ª–∏–¥–Ω—ã–π –∏–Ω–¥–µ–∫—Å: {start_idx}")
    
    # –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è –ø–µ—Ä–≤—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    final_upper[start_idx] = df.iloc[start_idx]['basic_upper']
    final_lower[start_idx] = df.iloc[start_idx]['basic_lower']
    
    if df.iloc[start_idx]['close'] <= final_upper[start_idx]:
        supertrend_direction[start_idx] = -1
        supertrend_line[start_idx] = final_upper[start_idx]
    else:
        supertrend_direction[start_idx] = 1
        supertrend_line[start_idx] = final_lower[start_idx]
    
    print(f"üéØ –ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è: direction={supertrend_direction[start_idx]}, line={supertrend_line[start_idx]:.2f}")
    
    # –í–ï–ö–¢–û–†–ò–ó–û–í–ê–ù–ù–´–ô –†–ê–°–ß–ï–¢ –¥–ª—è –æ—Å—Ç–∞–ª—å–Ω—ã—Ö –∑–Ω–∞—á–µ–Ω–∏–π
    valid_calculations = 0
    for i in range(start_idx + 1, len(df)):
        try:
            # –§–∏–Ω–∞–ª—å–Ω–∞—è –≤–µ—Ä—Ö–Ω—è—è –ø–æ–ª–æ—Å–∞
            if (df.iloc[i]['basic_upper'] < final_upper[i-1]) or (df.iloc[i-1]['close'] > final_upper[i-1]):
                final_upper[i] = df.iloc[i]['basic_upper']
            else:
                final_upper[i] = final_upper[i-1]
            
            # –§–∏–Ω–∞–ª—å–Ω–∞—è –Ω–∏–∂–Ω—è—è –ø–æ–ª–æ—Å–∞
            if (df.iloc[i]['basic_lower'] > final_lower[i-1]) or (df.iloc[i-1]['close'] < final_lower[i-1]):
                final_lower[i] = df.iloc[i]['basic_lower']
            else:
                final_lower[i] = final_lower[i-1]
            
            # –û–ø—Ä–µ–¥–µ–ª–µ–Ω–∏–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –∏ –ª–∏–Ω–∏–∏ Super Trend
            if supertrend_direction[i-1] == 1:  # –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–Ω–¥ –≤–æ—Å—Ö–æ–¥—è—â–∏–π
                if df.iloc[i]['close'] <= final_lower[i]:
                    supertrend_direction[i] = -1
                    supertrend_line[i] = final_upper[i]
                else:
                    supertrend_direction[i] = 1
                    supertrend_line[i] = final_lower[i]
            else:  # –ü—Ä–µ–¥—ã–¥—É—â–∏–π —Ç—Ä–µ–Ω–¥ –Ω–∏—Å—Ö–æ–¥—è—â–∏–π
                if df.iloc[i]['close'] >= final_upper[i]:
                    supertrend_direction[i] = 1
                    supertrend_line[i] = final_lower[i]
                else:
                    supertrend_direction[i] = -1
                    supertrend_line[i] = final_upper[i]
            
            valid_calculations += 1
            
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –Ω–∞ —à–∞–≥–µ {i}: {e}")
            # –ó–∞–ø–æ–ª–Ω—è–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–º–∏ –∑–Ω–∞—á–µ–Ω–∏—è–º–∏ –ø—Ä–∏ –æ—à–∏–±–∫–µ
            supertrend_direction[i] = supertrend_direction[i-1]
            supertrend_line[i] = supertrend_line[i-1]
    
    print(f"‚úÖ –£—Å–ø–µ—à–Ω—ã—Ö —Ä–∞—Å—á–µ—Ç–æ–≤: {valid_calculations}/{len(df) - start_idx - 1}")
    
    # –ó–∞–ø–æ–ª–Ω—è–µ–º DataFrame —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞–º–∏
    df['final_upper'] = final_upper
    df['final_lower'] = final_lower
    df['supertrend_direction'] = supertrend_direction
    df['supertrend_line'] = supertrend_line
    
    # üîç –î–ò–ê–ì–ù–û–°–¢–ò–ö–ê –†–ï–ó–£–õ–¨–¢–ê–¢–ê
    valid_direction = df['supertrend_direction'].notna().sum()
    valid_line = df['supertrend_line'].notna().sum()
    
    print(f"üéØ Super Trend —Ä–µ–∑—É–ª—å—Ç–∞—Ç:")
    print(f"   –ù–∞–ø—Ä–∞–≤–ª–µ–Ω–∏–µ: {valid_direction}/{len(df)} –≤–∞–ª–∏–¥–Ω—ã—Ö")
    print(f"   –õ–∏–Ω–∏—è: {valid_line}/{len(df)} –≤–∞–ª–∏–¥–Ω—ã—Ö") 
    print(f"   –£–Ω–∏–∫–∞–ª—å–Ω—ã–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è: {np.unique(df['supertrend_direction'])}")
    print(f"   –î–∏–∞–ø–∞–∑–æ–Ω –ª–∏–Ω–∏–∏: {df['supertrend_line'].min():.2f} - {df['supertrend_line'].max():.2f}")
    
    return df

def calculate_true_range(data: pd.DataFrame) -> pd.Series:
    """
    –†–∞—Å—á–µ—Ç True Range (TR)
    TR = max[(high - low), abs(high - prev_close), abs(low - prev_close)]
    """
    print(f"üîß –†–∞—Å—á–µ—Ç True Range...")
    
    high = data['high']
    low = data['low'] 
    close_prev = data['close'].shift(1)
    
    tr1 = high - low
    tr2 = abs(high - close_prev)
    tr3 = abs(low - close_prev)
    
    tr = pd.concat([tr1, tr2, tr3], axis=1).max(axis=1)
    
    print(f"üìä True Range: min={tr.min():.2f}, max={tr.max():.2f}, NaN={tr.isna().sum()}")
    
    return tr

def get_supertrend_signals(data: pd.DataFrame) -> pd.Series:
    """
    –ü–æ–ª—É—á–µ–Ω–∏–µ —Ç–æ—Ä–≥–æ–≤—ã—Ö —Å–∏–≥–Ω–∞–ª–æ–≤ –Ω–∞ –æ—Å–Ω–æ–≤–µ Super Trend
    
    Returns:
    --------
    pd.Series
        –°–∏–≥–Ω–∞–ª—ã: 1 - –ø–æ–∫—É–ø–∫–∞, -1 - –ø—Ä–æ–¥–∞–∂–∞, 0 - –±–µ–∑ —Å–∏–≥–Ω–∞–ª–∞
    """
    if 'supertrend_direction' not in data.columns:
        data = calculate_supertrend(data)
    
    # –°–∏–≥–Ω–∞–ª—ã –ø—Ä–∏ —Å–º–µ–Ω–µ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è
    direction_changes = data['supertrend_direction'].diff()
    
    # –ü–æ–∫—É–ø–∫–∞: —Å–º–µ–Ω–∞ —Å -1 (–Ω–∏—Å—Ö–æ–¥—è—â–∏–π) –Ω–∞ 1 (–≤–æ—Å—Ö–æ–¥—è—â–∏–π)
    buy_signals = (direction_changes == 2)
    
    # –ü—Ä–æ–¥–∞–∂–∞: —Å–º–µ–Ω–∞ —Å 1 (–≤–æ—Å—Ö–æ–¥—è—â–∏–π) –Ω–∞ -1 (–Ω–∏—Å—Ö–æ–¥—è—â–∏–π)  
    sell_signals = (direction_changes == -2)
    
    signal_series = pd.Series(0, index=data.index)
    signal_series[buy_signals] = 1
    signal_series[sell_signals] = -1
    
    # –§–∏–ª—å—Ç—Ä: –∏–≥–Ω–æ—Ä–∏—Ä—É–µ–º —Å–∏–≥–Ω–∞–ª—ã, –∫–æ—Ç–æ—Ä—ã–µ —Å—Ä–∞–∑—É –º–µ–Ω—è—é—Ç—Å—è –æ–±—Ä–∞—Ç–Ω–æ
    for i in range(1, len(signal_series) - 1):
        if signal_series.iloc[i] != 0 and signal_series.iloc[i+1] == -signal_series.iloc[i]:
            signal_series.iloc[i] = 0
            signal_series.iloc[i+1] = 0
    
    return signal_series

def analyze_supertrend_performance(data: pd.DataFrame) -> dict:
    """
    –ê–Ω–∞–ª–∏–∑ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Å–∏–≥–Ω–∞–ª–æ–≤ Super Trend
    """
    if 'supertrend_direction' not in data.columns:
        data = calculate_supertrend(data)
    
    signals = get_supertrend_signals(data)
    
    # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Å–∏–≥–Ω–∞–ª–æ–≤
    buy_signals = signals[signals == 1]
    sell_signals = signals[signals == -1]
    
    stats = {
        'total_buy_signals': len(buy_signals),
        'total_sell_signals': len(sell_signals),
        'total_signals': len(buy_signals) + len(sell_signals),
        'buy_signal_dates': buy_signals.index.tolist(),
        'sell_signal_dates': sell_signals.index.tolist()
    }
    
    return stats