import os
from datetime import datetime, timedelta
from tbank_api.instrument_service import InstrumentService

# –¢–æ–∫–µ–Ω –¥–ª—è —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è
TOKEN = "t.8HbNCn4L0U9uBmMa5oloBrXCKxnqsTYNVK3f9iJOwDBiQ2lva9kvQ3C-MLgEESHl65ma1q0k0P6aMfS_O_co4g"

def main():
    service = InstrumentService(token=TOKEN)
    
    print("üöÄ –£–ª—É—á—à–µ–Ω–Ω–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —Å–µ—Ä–≤–∏—Å–∞ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
    
    # –¢–µ—Å—Ç 1: –ü–æ–ª—É—á–µ–Ω–∏–µ –∞–∫—Ü–∏–π
    print("\n1. üìä –ü–æ–ª—É—á–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π...")
    try:
        shares_df = service.shares_to_dataframe()
        print(f"‚úÖ –£—Å–ø–µ—à–Ω–æ –ø–æ–ª—É—á–µ–Ω–æ {len(shares_df)} —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –∞–∫—Ü–∏–π")
        
        # –ü–æ–∫–∞–∂–µ–º –∏–∑–≤–µ—Å—Ç–Ω—ã–µ –∞–∫—Ü–∏–∏
        known_tickers = ['SBER', 'GAZP', 'LKOH', 'ROSN', 'YNDX', 'VTBR', 'TATN', 'GMKN', 'PLZL', 'NLMK']
        known_shares = shares_df[shares_df['Ticker'].isin(known_tickers)]
        print("\nüìà –ò–∑–≤–µ—Å—Ç–Ω—ã–µ —Ä–æ—Å—Å–∏–π—Å–∫–∏–µ –∞–∫—Ü–∏–∏:")
        for _, share in known_shares.iterrows():
            print(f"   - {share['Ticker']}: {share['Name']}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 2: –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤
    print("\n2. üîç –£–ª—É—á—à–µ–Ω–Ω—ã–π –ø–æ–∏—Å–∫ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤...")
    try:
        search_queries = ['SBER', 'GAZP', 'LKOH', 'YNDX']
        for query in search_queries:
            print(f"\n–ü–æ–∏—Å–∫ '{query}':")
            instruments = service.find_instrument(query)
            
            if instruments:
                print(f"   –ù–∞–π–¥–µ–Ω–æ –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {len(instruments)}")
                for instr in instruments[:3]:  # –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 3
                    instrument_type = getattr(instr, 'instrument_type', 'Unknown')
                    currency = getattr(instr, 'currency', 'Unknown')
                    print(f"   - {instr.ticker}: {instr.name} ({instrument_type}, {currency})")
            else:
                print("   –ò–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç—ã –Ω–µ –Ω–∞–π–¥–µ–Ω—ã")
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–ª–∏–≥–∞—Ü–∏–π
    print("\n3. üìä –ü–æ–ª—É—á–µ–Ω–∏–µ –æ–±–ª–∏–≥–∞—Ü–∏–π...")
    try:
        bonds = service.get_all_bonds()
        russian_bonds = [bond for bond in bonds if bond.currency == 'rub']
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(russian_bonds)} —Ä–æ—Å—Å–∏–π—Å–∫–∏—Ö –æ–±–ª–∏–≥–∞—Ü–∏–π")
        
        # –ü–æ–∫–∞–∂–µ–º –ø–µ—Ä–≤—ã–µ 5
        for bond in russian_bonds[:5]:
            print(f"   - {bond.ticker}: {bond.name}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 4: –ü–æ–∏—Å–∫ –ø–æ FIGI
    print("\n4. üîé –ü–æ–∏—Å–∫ –ø–æ FIGI...")
    try:
        # –ü–æ–ø—É–ª—è—Ä–Ω—ã–µ FIGI
        figi_dict = {
            'SBER': 'BBG004730N88',
            'GAZP': 'BBG004730RP0', 
            'LKOH': 'BBG004731032',
            'YNDX': 'BBG006L8G4H1'
        }
        
        for ticker, figi in figi_dict.items():
            instrument = service.get_instrument_by_figi(figi)
            if instrument and hasattr(instrument, 'instrument'):
                instr = instrument.instrument
                print(f"‚úÖ {ticker}: {instr.name}")
                print(f"   FIGI: {instr.figi}")
                print(f"   –¢–∏–∫–µ—Ä: {instr.ticker}")
                print(f"   –í–∞–ª—é—Ç–∞: {instr.currency}")
                print(f"   –õ–æ—Ç: {instr.lot}")
                print(f"   –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–π —à–∞–≥: {instr.min_price_increment.units}.{instr.min_price_increment.nano:09d}")
                print()
                
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")
    
    # –¢–µ—Å—Ç 5: –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç
    print("\n5. üí∞ –ü–æ–ª—É—á–µ–Ω–∏–µ –≤–∞–ª—é—Ç...")
    try:
        currencies = service.get_all_currencies()
        print(f"‚úÖ –ù–∞–π–¥–µ–Ω–æ {len(currencies)} –≤–∞–ª—é—Ç")
        
        # –ü–æ–∫–∞–∂–µ–º –æ—Å–Ω–æ–≤–Ω—ã–µ –≤–∞–ª—é—Ç—ã
        main_currencies = [c for c in currencies if c.ticker in ['USD', 'EUR', 'CNY', 'GBP']]
        for currency in main_currencies:
            print(f"   - {currency.ticker}: {currency.name}")
            
    except Exception as e:
        print(f"‚ùå –û—à–∏–±–∫–∞: {e}")

if __name__ == "__main__":
    main()