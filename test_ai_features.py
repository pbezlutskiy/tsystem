# test_ai_features.py
"""
–¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ AI-—Ñ—É–Ω–∫—Ü–∏–π
"""

import sys
import os
import time
sys.path.append(os.path.dirname(os.path.abspath(__file__)))

from tbank_api.optimized_data_manager import OptimizedTBankDataManager

def test_ai_features():
    print("üß™ –¢–ï–°–¢–ò–†–û–í–ê–ù–ò–ï AI-–§–£–ù–ö–¶–ò–ô")
    print("=" * 50)
    
    manager = OptimizedTBankDataManager()
    
    # –¢–µ—Å—Ç 1: –£–º–Ω—ã–π –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å
    print("1. üîÆ –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ —É–º–Ω–æ–≥–æ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—è...")
    try:
        # –°–∏–º—É–ª–∏—Ä—É–µ–º –Ω–µ—Å–∫–æ–ª—å–∫–æ –æ–±—Ä–∞—â–µ–Ω–∏–π
        manager.smart_predictor.record_access("SBER", "1d")
        manager.smart_predictor.record_access("GAZP", "1d") 
        manager.smart_predictor.record_access("SBER", "1d")
        
        stats = manager.get_prediction_stats()
        print(f"   ‚Ä¢ –û—Ç—Å–ª–µ–∂–∏–≤–∞–µ—Ç—Å—è –∏–Ω—Å—Ç—Ä—É–º–µ–Ω—Ç–æ–≤: {stats['tracked_symbols']}")
        print(f"   ‚Ä¢ –ü—Ä–µ–¥—Å–∫–∞–∑–∞–Ω–∏–π: {stats['total_predictions']}")
        print("   ‚úÖ –£–º–Ω—ã–π –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—å —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –ø—Ä–µ–¥—Å–∫–∞–∑–∞—Ç–µ–ª—è: {e}")
    
    # –¢–µ—Å—Ç 2: –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä
    print("2. ‚öôÔ∏è –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –∞–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä–∞...")
    try:
        optimizer_info = manager.get_optimization_info()
        print(f"   ‚Ä¢ –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è: {'–í–∫–ª—é—á–µ–Ω–∞' if optimizer_info['auto_optimization_enabled'] else '–í—ã–∫–ª—é—á–µ–Ω–∞'}")
        print(f"   ‚Ä¢ –ò—Å—Ç–æ—Ä–∏—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–π: {optimizer_info['optimization_history_count']}")
        
        # –ó–∞–ø—É—Å–∫–∞–µ–º –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏—é
        manager.auto_optimizer.optimize_cache_parameters()
        print("   ‚úÖ –ê–≤—Ç–æ–æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –æ–ø—Ç–∏–º–∏–∑–∞—Ç–æ—Ä–∞: {e}")
    
    # –¢–µ—Å—Ç 3: –ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞
    print("3. üìä –¢–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ –ø–æ–ª–Ω–æ–π –∞–Ω–∞–ª–∏—Ç–∏–∫–∏...")
    try:
        analytics = manager.get_detailed_analytics()
        print(f"   ‚Ä¢ Hit Ratio: {analytics.get('cache_hit_ratio', 'N/A')}")
        print(f"   ‚Ä¢ –†–∞–∑–º–µ—Ä –∫—ç—à–∞: {analytics.get('total_cache_size_mb', 0):.1f} MB")
        print("   ‚úÖ –ü–æ–ª–Ω–∞—è –∞–Ω–∞–ª–∏—Ç–∏–∫–∞ —Ä–∞–±–æ—Ç–∞–µ—Ç")
    except Exception as e:
        print(f"   ‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏—Ç–∏–∫–∏: {e}")
    
    print("\nüéâ AI-–§–£–ù–ö–¶–ò–ò –†–ê–ë–û–¢–ê–Æ–¢!")
    print("üí° –°–∏—Å—Ç–µ–º–∞ —Ç–µ–ø–µ—Ä—å –ø—Ä–µ–¥—Å–∫–∞–∑—ã–≤–∞–µ—Ç –≤–∞—à–∏ –∑–∞–ø—Ä–æ—Å—ã –∏ —Å–∞–º–æ–æ–ø—Ç–∏–º–∏–∑–∏—Ä—É–µ—Ç—Å—è")

if __name__ == "__main__":
    test_ai_features()