# ===== –°–ï–ö–¶–ò–Ø: –í–ö–õ–ê–î–ö–ê –ê–ù–ê–õ–ò–ó–ê –†–ò–°–ö-–ú–ï–ù–ï–î–ñ–ú–ï–ù–¢–ê =====
"""
–í–∫–ª–∞–¥–∫–∞ –¥–ª—è –¥–µ—Ç–∞–ª—å–Ω–æ–≥–æ –∞–Ω–∞–ª–∏–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞
–í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤, —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤ –∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏ –≤—ã—Ö–æ–¥–æ–≤
"""

import tkinter as tk
from tkinter import ttk
from tkinter import Menu
import matplotlib.pyplot as plt
from matplotlib.backends.backend_tkagg import FigureCanvasTkAgg
from typing import Optional


class RiskAnalysisTab:
    """–í–∫–ª–∞–¥–∫–∞ –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏ —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞"""
    
    def __init__(self, parent, visualizer, main_window=None):
        self.parent = parent
        self.visualizer = visualizer
        self.main_window = main_window  # üÜï –°–æ—Ö—Ä–∞–Ω—è–µ–º —Å—Å—ã–ª–∫—É –Ω–∞ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
        self.current_figure = None
        
        self.frame = ttk.Frame(parent)
        self.setup_ui()
    
    def setup_ui(self):
        """–ù–∞—Å—Ç—Ä–æ–π–∫–∞ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –≤–∫–ª–∞–¥–∫–∏"""
        self.frame.columnconfigure(0, weight=1)
        self.frame.rowconfigure(1, weight=1)
        
        # –ü–∞–Ω–µ–ª—å —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        control_frame = ttk.Frame(self.frame)
        control_frame.grid(row=0, column=0, sticky=(tk.W, tk.E), pady=5)
        control_frame.columnconfigure(1, weight=1)
        
        # üÜï –î–û–ë–ê–í–õ–Ø–ï–ú –í–´–ü–ê–î–ê–Æ–©–ò–ô –°–ü–ò–°–û–ö –° –†–ï–ó–£–õ–¨–¢–ê–¢–ê–ú–ò
        ttk.Label(control_frame, text="–†–µ–∑—É–ª—å—Ç–∞—Ç:").grid(row=0, column=0, padx=5, sticky=tk.W)
        
        self.result_var = tk.StringVar()
        self.result_combo = ttk.Combobox(control_frame, textvariable=self.result_var, 
                                        state="readonly", width=30)
        self.result_combo.grid(row=0, column=1, padx=5, sticky=(tk.W, tk.E))
        self.result_combo.bind('<<ComboboxSelected>>', self._on_result_selected)
        
        # –ö–Ω–æ–ø–∫–∏ —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è
        button_frame = ttk.Frame(self.frame)
        button_frame.grid(row=1, column=0, sticky=(tk.W, tk.E), pady=5)
        button_frame.columnconfigure(1, weight=1)  # –î–∞–µ–º –ø—Ä–æ—Å—Ç—Ä–∞–Ω—Å—Ç–≤–æ –¥–ª—è –∏–Ω–¥–∏–∫–∞—Ç–æ—Ä–∞

        # –û—Å–Ω–æ–≤–Ω–∞—è –∫–Ω–æ–ø–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è
        ttk.Button(button_frame, text="üîÑ –û–±–Ω–æ–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑",
                command=self.update_analysis).grid(row=0, column=0, padx=5, sticky=tk.W)

        # –í—ã–ø–∞–¥–∞—é—â–µ–µ –º–µ–Ω—é –¥–ª—è –¥–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã—Ö —Ñ—É–Ω–∫—Ü–∏–π
        def show_analysis_menu():
            """–ü–æ–∫–∞–∑–∞—Ç—å –º–µ–Ω—é –∞–Ω–∞–ª–∏–∑–∞"""
            try:
                menu = Menu(self.frame, tearoff=0, font=('Arial', 9))
                menu.add_command(label="üìà –ì—Ä–∞—Ñ–∏–∫ –æ—Ä–¥–µ—Ä–æ–≤", command=self.show_risk_plot)
                menu.add_command(label="üìä –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ —Ä–∏—Å–∫–æ–≤", command=self.show_risk_stats)
                menu.add_command(label="‚öñÔ∏è –°—Ä–∞–≤–Ω–∏—Ç—å —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏", command=self.compare_risk_strategies)
                menu.add_separator()
                
                
                # –ü–æ–∫–∞–∑—ã–≤–∞–µ–º –º–µ–Ω—é –ø–æ–¥ –∫–Ω–æ–ø–∫–æ–π
                x = self.analysis_btn.winfo_rootx()
                y = self.analysis_btn.winfo_rooty() + self.analysis_btn.winfo_height()
                menu.post(x, y)
            except Exception as e:
                print(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–∫–∞–∑–∞ –º–µ–Ω—é: {e}")

        self.analysis_btn = ttk.Button(button_frame, text="üìä –ê–Ω–∞–ª–∏–∑ ‚ñº",
                                    command=show_analysis_menu)
        self.analysis_btn.grid(row=0, column=1, padx=5, sticky=tk.W)

        # –ò–Ω–¥–∏–∫–∞—Ç–æ—Ä –∑–∞–≥—Ä—É–∑–∫–∏
        self.status_label = ttk.Label(button_frame, text="–í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞", 
                                    foreground="gray")
        self.status_label.grid(row=0, column=2, padx=5, sticky=tk.E)
        
        # –û–±–ª–∞—Å—Ç—å –¥–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è
        self.notebook = ttk.Notebook(self.frame)
        self.notebook.grid(row=2, column=0, sticky=(tk.W, tk.E, tk.N, tk.S))  # üÜï –ò–∑–º–µ–Ω—è–µ–º –Ω–∞ row=2
        
        # –í–∫–ª–∞–¥–∫–∞ —Å —Ç–µ–∫—Å—Ç–æ–≤–æ–π —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
        self.stats_frame = ttk.Frame(self.notebook)
        self.stats_text = tk.Text(self.stats_frame, wrap=tk.WORD, font=('Consolas', 9), 
                                 height=25, width=80)
        scrollbar = ttk.Scrollbar(self.stats_frame, orient=tk.VERTICAL, command=self.stats_text.yview)
        self.stats_text.configure(yscrollcommand=scrollbar.set)
        
        self.stats_text.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        
        self.notebook.add(self.stats_frame, text="üìã –î–µ—Ç–∞–ª—å–Ω–∞—è —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞")
        
        # –í–∫–ª–∞–¥–∫–∞ —Å –≥—Ä–∞—Ñ–∏–∫–æ–º —Ä–∏—Å–∫-–æ—Ä–¥–µ—Ä–æ–≤
        self.plot_frame = ttk.Frame(self.notebook)
        self.plot_frame.columnconfigure(0, weight=1)  # ‚úÖ –î–û–ë–ê–í–ò–¢–¨
        self.plot_frame.rowconfigure(0, weight=1)     # ‚úÖ –î–û–ë–ê–í–ò–¢–¨
        self.notebook.add(self.plot_frame, text="üìà –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ä–¥–µ—Ä–æ–≤")
        
        # –í–∫–ª–∞–¥–∫–∞ —Å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –≤—ã—Ö–æ–¥–æ–≤
        self.efficiency_frame = ttk.Frame(self.notebook)
        self.efficiency_text = tk.Text(self.efficiency_frame, wrap=tk.WORD, font=('Consolas', 9),
                                      height=25, width=80)
        efficiency_scrollbar = ttk.Scrollbar(self.efficiency_frame, orient=tk.VERTICAL, 
                                           command=self.efficiency_text.yview)
        self.efficiency_text.configure(yscrollcommand=efficiency_scrollbar.set)
        
        self.efficiency_text.pack(side=tk.LEFT, fill=tk.BOTH, expand=True)
        efficiency_scrollbar.pack(side=tk.RIGHT, fill=tk.Y)
        
        self.notebook.add(self.efficiency_frame, text="üéØ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å –≤—ã—Ö–æ–¥–æ–≤")
        
        # –ó–∞–≥–ª—É—à–∫–∞ –ø—Ä–∏ –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏–∏
        self.show_placeholder()
    
    def _on_result_selected(self, event=None):
        """–û–±—Ä–∞–±–æ—Ç—á–∏–∫ –≤—ã–±–æ—Ä–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞"""
        self.update_analysis()

    def update_results_list(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ —Å–ø–∏—Å–∫–∞ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤"""
        try:
            if hasattr(self.visualizer, 'get_available_results'):
                results = self.visualizer.get_available_results()
                self.result_combo['values'] = results
                if results:
                    self.result_combo.set(results[-1])  # –í—ã–±–∏—Ä–∞–µ–º –ø–æ—Å–ª–µ–¥–Ω–∏–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç
        except Exception as e:
            print(f"‚ùå –û—à–∏–±–∫–∞ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Å–ø–∏—Å–∫–∞ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤: {e}")

    def show_placeholder(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å –∑–∞–≥–ª—É—à–∫—É –ø—Ä–∏ –æ—Ç—Å—É—Ç—Å—Ç–≤–∏–∏ –¥–∞–Ω–Ω—ã—Ö"""
        placeholder_text = """
        üéØ –ê–ù–ê–õ–ò–ó –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–ò –†–ò–°–ö-–ú–ï–ù–ï–î–ñ–ú–ï–ù–¢–ê
        ======================================
        
        –î–ª—è –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏—è –∞–Ω–∞–ª–∏–∑–∞:
        
        1. –ó–∞–≥—Ä—É–∑–∏—Ç–µ –¥–∞–Ω–Ω—ã–µ –∏ –∑–∞–ø—É—Å—Ç–∏—Ç–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ
        2. –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –≤ –≤—ã–ø–∞–¥–∞—é—â–µ–º —Å–ø–∏—Å–∫–µ
        3. –ù–∞–∂–º–∏—Ç–µ "–û–±–Ω–æ–≤–∏—Ç—å –∞–Ω–∞–ª–∏–∑"
        
        üìä –ß—Ç–æ –±—É–¥–µ—Ç –ø–æ–∫–∞–∑–∞–Ω–æ:
        ‚Ä¢ –≠—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å —Å—Ç–æ–ø-–ª–æ—Å—Å–æ–≤ –∏ —Ç–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç–æ–≤
        ‚Ä¢ –í–∏–∑—É–∞–ª–∏–∑–∞—Ü–∏—è –æ—Ä–¥–µ—Ä–æ–≤ –Ω–∞ –≥—Ä–∞—Ñ–∏–∫–µ —Ü–µ–Ω
        ‚Ä¢ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –≤—ã—Ö–æ–¥–æ–≤ –∏–∑ –ø–æ–∑–∏—Ü–∏–π
        ‚Ä¢ –†–µ–∫–æ–º–µ–Ω–¥–∞—Ü–∏–∏ –ø–æ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ —Ä–∏—Å–∫–æ–≤
        """
        
        self.stats_text.config(state=tk.NORMAL)
        self.stats_text.delete(1.0, tk.END)
        self.stats_text.insert(tk.END, placeholder_text)
        self.stats_text.config(state=tk.DISABLED)
        
        self.efficiency_text.config(state=tk.NORMAL)
        self.efficiency_text.delete(1.0, tk.END)
        self.efficiency_text.insert(tk.END, placeholder_text)
        self.efficiency_text.config(state=tk.DISABLED)
    
    def update_analysis(self):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –∞–Ω–∞–ª–∏–∑–∞ —Ä–∏—Å–∫–æ–≤"""
        current_result = self._get_current_result()
        
        # üÜï –î–û–ë–ê–í–ò–ú –û–¢–õ–ê–î–û–ß–ù–£–Æ –ò–ù–§–û–†–ú–ê–¶–ò–Æ
        print(f"üîç –û—Ç–ª–∞–¥–∫–∞: current_result = '{current_result}'")
        print(f"üîç –û—Ç–ª–∞–¥–∫–∞: main_window = {self.main_window}")
        
        if not current_result:
            self._show_error("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            
            # üÜï –ü–æ–∫–∞–∂–µ–º –¥–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã
            if hasattr(self.visualizer, 'get_available_results'):
                available = self.visualizer.get_available_results()
                print(f"üîç –î–æ—Å—Ç—É–ø–Ω—ã–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã: {available}")
                
            return
        
        try:
            self.status_label.config(text="‚è≥ –ê–Ω–∞–ª–∏–∑–∏—Ä—É–µ–º —Ä–∏—Å–∫–∏...", foreground="blue")
            self.frame.update()
            
            # –û–±–Ω–æ–≤–ª—è–µ–º –≤—Å–µ –≤–∫–ª–∞–¥–∫–∏
            self._update_stats_tab(current_result)
            self._update_efficiency_tab(current_result)
            
            self.status_label.config(text="‚úÖ –ê–Ω–∞–ª–∏–∑ –∑–∞–≤–µ—Ä—à–µ–Ω", foreground="green")
            
        except Exception as e:
            self._show_error(f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞: {str(e)}")
                

    def show_risk_plot(self):
        """–£–ø—Ä–æ—â–µ–Ω–Ω–∞—è –≤–µ—Ä—Å–∏—è –±–µ–∑ —Ç—É–ª–±–∞—Ä–∞"""
        current_result = self._get_current_result()
        if not current_result:
            self._show_error("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
        
        try:
            self.status_label.config(text="‚è≥ –°—Ç—Ä–æ–∏–º –≥—Ä–∞—Ñ–∏–∫...", foreground="blue")
            self.frame.update()
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å –≥—Ä–∞—Ñ–∏–∫–æ–º
            self.notebook.select(1)
            
            # –û—á–∏—â–∞–µ–º –ø—Ä–µ–¥—ã–¥—É—â–∏–π –≥—Ä–∞—Ñ–∏–∫
            for widget in self.plot_frame.winfo_children():
                widget.destroy()
            
            # –°–æ–∑–¥–∞–µ–º –Ω–æ–≤—ã–π –≥—Ä–∞—Ñ–∏–∫
            fig = self.visualizer.plot_risk_levels(current_result)
            if fig:
                canvas = FigureCanvasTkAgg(fig, self.plot_frame)
                canvas.draw()
                canvas.get_tk_widget().pack(fill=tk.BOTH, expand=True)  # ‚úÖ pack –¢–û–õ–¨–ö–û –¥–ª—è canvas
                
                self.current_figure = fig
                self.status_label.config(text="‚úÖ –ì—Ä–∞—Ñ–∏–∫ –ø–æ—Å—Ç—Ä–æ–µ–Ω", foreground="green")
            else:
                self._show_error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ—Å—Ç—Ä–æ–∏—Ç—å –≥—Ä–∞—Ñ–∏–∫")
            
        except Exception as e:
            self._show_error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ—Å—Ç—Ä–æ–µ–Ω–∏—è –≥—Ä–∞—Ñ–∏–∫–∞: {str(e)}")
                            
    def show_risk_stats(self):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∏—Å–∫–æ–≤"""
        current_result = self._get_current_result()
        if not current_result:
            self._show_error("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
        
        try:
            self.status_label.config(text="‚è≥ –ó–∞–≥—Ä—É–∂–∞–µ–º —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É...", foreground="blue")
            self.frame.update()
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π
            self.notebook.select(0)
            
            # –ü–æ–ª—É—á–∞–µ–º –æ—Ç—á–µ—Ç –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            if hasattr(self.visualizer, 'get_risk_efficiency_report'):
                stats_report = self.visualizer.get_risk_efficiency_report(current_result)
            else:
                stats_report = self._generate_basic_efficiency_report(current_result)
            
            self.stats_text.config(state=tk.NORMAL)
            self.stats_text.delete(1.0, tk.END)
            self.stats_text.insert(tk.END, stats_report)
            self.stats_text.config(state=tk.DISABLED)
            
            self.status_label.config(text="‚úÖ –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –∑–∞–≥—Ä—É–∂–µ–Ω–∞", foreground="green")
            
        except Exception as e:
            self._show_error(f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}")
                
    def _update_stats_tab(self, result_name: str):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —Å–æ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–æ–π"""
        try:
            # –ü–æ–ª—É—á–∞–µ–º –¥–µ—Ç–∞–ª—å–Ω—É—é —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫—É —Ä–∏—Å–∫–æ–≤
            stats = self.visualizer.get_detailed_risk_stats(result_name)
            
            self.stats_text.config(state=tk.NORMAL)
            self.stats_text.delete(1.0, tk.END)
            self.stats_text.insert(tk.END, stats)
            self.stats_text.config(state=tk.DISABLED)
            
        except Exception as e:
            self.stats_text.config(state=tk.NORMAL)
            self.stats_text.delete(1.0, tk.END)
            self.stats_text.insert(tk.END, f"‚ùå –û—à–∏–±–∫–∞ –∑–∞–≥—Ä—É–∑–∫–∏ —Å—Ç–∞—Ç–∏—Å—Ç–∏–∫–∏: {str(e)}")
            self.stats_text.config(state=tk.DISABLED)
    
    def _update_efficiency_tab(self, result_name: str):
        """–û–±–Ω–æ–≤–ª–µ–Ω–∏–µ –≤–∫–ª–∞–¥–∫–∏ —Å —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç—å—é –≤—ã—Ö–æ–¥–æ–≤"""
        try:
            if hasattr(self.visualizer, 'get_risk_efficiency_report'):
                efficiency_report = self.visualizer.get_risk_efficiency_report(result_name)
            else:
                efficiency_report = self._generate_basic_efficiency_report(result_name)
            
            self.efficiency_text.config(state=tk.NORMAL)
            self.efficiency_text.delete(1.0, tk.END)
            self.efficiency_text.insert(tk.END, efficiency_report)
            self.efficiency_text.config(state=tk.DISABLED)
            
        except Exception as e:
            self.efficiency_text.config(state=tk.NORMAL)
            self.efficiency_text.delete(1.0, tk.END)
            self.efficiency_text.insert(tk.END, f"‚ùå –û—à–∏–±–∫–∞ –∞–Ω–∞–ª–∏–∑–∞ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏: {str(e)}")
            self.efficiency_text.config(state=tk.DISABLED)
                
    def _generate_basic_efficiency_report(self, result_name: str) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –±–∞–∑–æ–≤–æ–≥–æ –æ—Ç—á–µ—Ç–∞ –æ–± —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏"""
        if result_name not in self.visualizer.results_history:
            return "–î–∞–Ω–Ω—ã–µ –Ω–µ –Ω–∞–π–¥–µ–Ω—ã"
        
        data = self.visualizer.results_history[result_name]
        performance = data['performance']
        
        report = "üéØ –û–¢–ß–ï–¢ –≠–§–§–ï–ö–¢–ò–í–ù–û–°–¢–ò –í–´–•–û–î–û–í\n"
        report += "=" * 40 + "\n\n"
        
        if performance.get('risk_system_enabled', False):
            report += "‚úÖ –°–ò–°–¢–ï–ú–ê –†–ò–°–ö-–ú–ï–ù–ï–î–ñ–ú–ï–ù–¢–ê –ê–ö–¢–ò–í–ù–ê\n\n"
            
            # –°—Ç–∞—Ç–∏—Å—Ç–∏–∫–∞ –ø–æ —Ç–∏–ø–∞–º –≤—ã—Ö–æ–¥–æ–≤
            report += "üìä –°–¢–ê–¢–ò–°–¢–ò–ö–ê –í–´–•–û–î–û–í:\n"
            report += f"‚Ä¢ –í—Å–µ–≥–æ —Å–¥–µ–ª–æ–∫ —Å —Ä–∏—Å–∫–∞–º–∏: {performance.get('total_trades_with_risk', 0)}\n"
            report += f"‚Ä¢ –°—Ç–æ–ø-–ª–æ—Å—Å—ã: {performance.get('stop_loss_trades', 0)}\n"
            report += f"‚Ä¢ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç—ã: {performance.get('take_profit_trades', 0)}\n"
            report += f"‚Ä¢ Risk-Reward Ratio: {performance.get('risk_reward_ratio', 0):.2f}\n"
            report += f"‚Ä¢ Win Rate: {performance.get('win_rate_with_stops', 0):.1f}%\n\n"
            
            # –ê–Ω–∞–ª–∏–∑ PnL
            if 'pnl_by_reason' in performance:
                report += "üí∞ PnL –ü–û –¢–ò–ü–ê–ú –í–´–•–û–î–û–í:\n"
                pnl_data = performance['pnl_by_reason']
                for reason, stats in pnl_data.items():
                    if 'mean' in stats:
                        report += f"‚Ä¢ {reason}: {stats['mean']:+.2f}% (n={stats.get('count', 0)})\n"
        else:
            report += "‚ùå –°–ò–°–¢–ï–ú–ê –†–ò–°–ö-–ú–ï–ù–ï–î–ñ–ú–ï–ù–¢–ê –ù–ï –ê–ö–¢–ò–í–ù–ê\n"
            report += "–°–¥–µ–ª–∫–∏ –∑–∞–∫—Ä—ã–≤–∞–ª–∏—Å—å —Ç–æ–ª—å–∫–æ –ø–æ —Ç–æ—Ä–≥–æ–≤—ã–º —Å–∏–≥–Ω–∞–ª–∞–º\n"
        
        return report
    

    def _get_current_result(self) -> str:
        """–ü–æ–ª—É—á–∏—Ç—å —Ç–µ–∫—É—â–∏–π –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç"""
        try:
            # –°–ø–æ—Å–æ–± 1: —á–µ—Ä–µ–∑ –ø–µ—Ä–µ–¥–∞–Ω–Ω–æ–µ –≥–ª–∞–≤–Ω–æ–µ –æ–∫–Ω–æ
            if self.main_window and hasattr(self.main_window, 'selected_result'):
                result = self.main_window.selected_result.get()
                if result:
                    return result
            
            # –°–ø–æ—Å–æ–± 2: —á–µ—Ä–µ–∑ parent chain
            current = self.parent
            for _ in range(5):  # –ú–∞–∫—Å–∏–º—É–º 5 —É—Ä–æ–≤–Ω–µ–π –≤–≤–µ—Ä—Ö
                if hasattr(current, 'selected_result'):
                    return current.selected_result.get()
                if hasattr(current, 'master'):
                    current = current.master
                else:
                    break
            
            # –°–ø–æ—Å–æ–± 3: —á–µ—Ä–µ–∑ toplevel
            root = self.frame.winfo_toplevel()
            if hasattr(root, 'selected_result'):
                return root.selected_result.get()
                
            self._show_error("‚ùå –ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –≤—ã–±—Ä–∞–Ω–Ω—ã–π —Ä–µ–∑—É–ª—å—Ç–∞—Ç")
            return ""
            
        except Exception as e:
            self._show_error(f"‚ùå –û—à–∏–±–∫–∞ –ø–æ–ª—É—á–µ–Ω–∏—è —Ä–µ–∑—É–ª—å—Ç–∞—Ç–∞: {str(e)}")
            return ""

    def _show_error(self, message: str):
        """–ü–æ–∫–∞–∑–∞—Ç—å —Å–æ–æ–±—â–µ–Ω–∏–µ –æ–± –æ—à–∏–±–∫–µ"""
        self.status_label.config(text=message, foreground="red")
        
        self.stats_text.config(state=tk.NORMAL)
        self.stats_text.delete(1.0, tk.END)
        self.stats_text.insert(tk.END, message)
        self.stats_text.config(state=tk.DISABLED)
    
    def clear_analysis(self):
        """–û—á–∏—Å—Ç–∏—Ç—å –∞–Ω–∞–ª–∏–∑"""
        self.show_placeholder()
        self.status_label.config(text="–ê–Ω–∞–ª–∏–∑ –æ—á–∏—â–µ–Ω", foreground="gray")
        
        # –û—á–∏—â–∞–µ–º –≥—Ä–∞—Ñ–∏–∫
        if self.current_figure:
            plt.close(self.current_figure)
            self.current_figure = None
        
        for widget in self.plot_frame.winfo_children():
            widget.destroy()
    
    def get_frame(self):
        """–í–æ–∑–≤—Ä–∞—â–∞–µ—Ç —Ñ—Ä–µ–π–º –≤–∫–ª–∞–¥–∫–∏"""
        return self.frame

    def update_tab(self, result_name: str = None):
        """–û–±–Ω–æ–≤–∏—Ç—å –≤–∫–ª–∞–¥–∫—É (–≤—ã–∑—ã–≤–∞–µ—Ç—Å—è –∏–∑ –≥–ª–∞–≤–Ω–æ–≥–æ –æ–∫–Ω–∞)"""
        if result_name:
            self.update_analysis()
        else:
            self.clear_analysis()

    def compare_risk_strategies(self):
        """–°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ä–∞–∑–Ω—ã—Ö —Å—Ç—Ä–∞—Ç–µ–≥–∏–π —Ä–∏—Å–∫-–º–µ–Ω–µ–¥–∂–º–µ–Ω—Ç–∞"""
        current_result = self._get_current_result()
        if not current_result:
            self._show_error("‚ùå –í—ã–±–µ—Ä–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç –¥–ª—è –∞–Ω–∞–ª–∏–∑–∞")
            return
        
        try:
            self.status_label.config(text="‚è≥ –°—Ä–∞–≤–Ω–∏–≤–∞–µ–º —Å—Ç—Ä–∞—Ç–µ–≥–∏–∏...", foreground="blue")
            self.frame.update()
            
            # –ü–µ—Ä–µ–∫–ª—é—á–∞–µ–º—Å—è –Ω–∞ –≤–∫–ª–∞–¥–∫—É —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏
            self.notebook.select(2)
            
            comparison_report = self._generate_strategy_comparison(current_result)
            
            self.efficiency_text.config(state=tk.NORMAL)
            self.efficiency_text.delete(1.0, tk.END)
            self.efficiency_text.insert(tk.END, comparison_report)
            self.efficiency_text.config(state=tk.DISABLED)
            
            self.status_label.config(text="‚úÖ –°—Ä–∞–≤–Ω–µ–Ω–∏–µ –∑–∞–≤–µ—Ä—à–µ–Ω–æ", foreground="green")
            
        except Exception as e:
            self._show_error(f"‚ùå –û—à–∏–±–∫–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π: {str(e)}")

    def _generate_strategy_comparison(self) -> str:
        """–ì–µ–Ω–µ—Ä–∞—Ü–∏—è –æ—Ç—á–µ—Ç–∞ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è —Å—Ç—Ä–∞—Ç–µ–≥–∏–π"""
        current_result = self._get_current_result()
        
        report = "‚öñÔ∏è –°–†–ê–í–ù–ï–ù–ò–ï –°–¢–†–ê–¢–ï–ì–ò–ô –†–ò–°–ö-–ú–ï–ù–ï–î–ñ–ú–ï–ù–¢–ê\n"
        report += "=" * 50 + "\n\n"
        
        # –î–æ–±–∞–≤–ª—è–µ–º –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –Ω–∞—Å—Ç—Ä–æ–π–∫–∞—Ö
        if current_result:
            report += f"üìã –¢–ï–ö–£–©–ò–ï –ù–ê–°–¢–†–û–ô–ö–ò ({current_result}):\n"
            # –ó–¥–µ—Å—å –º–æ–∂–Ω–æ –¥–æ–±–∞–≤–∏—Ç—å –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–∫—É—â–∏—Ö –ø–∞—Ä–∞–º–µ—Ç—Ä–∞—Ö
            report += "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É—é—Ç—Å—è –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –∏–∑ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏—è\n\n"
        
        report += "üìä –†–ï–ö–û–ú–ï–ù–î–£–ï–ú–´–ï –°–¢–†–ê–¢–ï–ì–ò–ò:\n\n"
        
        report += "1. üü¢ –ö–û–ù–°–ï–†–í–ê–¢–ò–í–ù–ê–Ø (ATR: 1.5/2.0)\n"
        report += "   ‚Ä¢ –°—Ç–æ–ø-–ª–æ—Å—Å: 1.5 ATR\n"
        report += "   ‚Ä¢ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: 2.0 ATR\n"
        report += "   ‚Ä¢ Risk-Reward: 1.33\n"
        report += "   ‚Ä¢ –î–ª—è: –ù–∏–∑–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å, –Ω–∞—á–∏–Ω–∞—é—â–∏–µ —Ç—Ä–µ–π–¥–µ—Ä—ã\n\n"
        
        report += "2. üü° –£–ú–ï–†–ï–ù–ù–ê–Ø (ATR: 2.0/3.0)\n" 
        report += "   ‚Ä¢ –°—Ç–æ–ø-–ª–æ—Å—Å: 2.0 ATR\n"
        report += "   ‚Ä¢ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: 3.0 ATR\n"
        report += "   ‚Ä¢ Risk-Reward: 1.50\n"
        report += "   ‚Ä¢ –î–ª—è: –°—Ç–∞–Ω–¥–∞—Ä—Ç–Ω—ã–µ —É—Å–ª–æ–≤–∏—è, —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π —Ä–∏—Å–∫\n\n"
        
        report += "3. üî¥ –ê–ì–†–ï–°–°–ò–í–ù–ê–Ø (ATR: 2.5/4.0)\n"
        report += "   ‚Ä¢ –°—Ç–æ–ø-–ª–æ—Å—Å: 2.5 ATR\n"
        report += "   ‚Ä¢ –¢–µ–π–∫-–ø—Ä–æ—Ñ–∏—Ç: 4.0 ATR\n"
        report += "   ‚Ä¢ Risk-Reward: 1.60\n"
        report += "   ‚Ä¢ –î–ª—è: –í—ã—Å–æ–∫–∞—è –≤–æ–ª–∞—Ç–∏–ª—å–Ω–æ—Å—Ç—å, –æ–ø—ã—Ç–Ω—ã–µ —Ç—Ä–µ–π–¥–µ—Ä—ã\n\n"
        
        report += "üí° –°–û–í–ï–¢–´:\n"
        report += "‚Ä¢ –ü—Ä–æ—Ç–µ—Å—Ç–∏—Ä—É–π—Ç–µ —Ä–∞–∑–Ω—ã–µ –ø–∞—Ä–∞–º–µ—Ç—Ä—ã –≤ –æ—Å–Ω–æ–≤–Ω–æ–º –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–µ\n"
        report += "‚Ä¢ –°—Ä–∞–≤–Ω–∏—Ç–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç—ã –≤ —Ä–∞–∑–¥–µ–ª–µ '–°—Ä–∞–≤–Ω–µ–Ω–∏–µ'\n"
        report += "‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ '–ì—Ä–∞—Ñ–∏–∫ –æ—Ä–¥–µ—Ä–æ–≤' –¥–ª—è –≤–∏–∑—É–∞–ª—å–Ω–æ–π –æ—Ü–µ–Ω–∫–∏ —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ—Å—Ç–∏\n"
        
        return report